name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      shell: bash
      env:
        CGO_ENABLED: '0'
      run: go test -v

  create-release:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release create --draft "${GITHUB_REF#refs/tags/}"

  upload-drelease:
    runs-on: ubuntu-latest
    needs: [create-release]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    strategy:
      matrix:
        GOOS: [windows, darwin, linux]
        GOARCH: [amd64]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - name: Build release assets
      env:
        CGO_ENABLED: '0'
        GOOS: ${{ matrix.GOOS }}
        GOARCH: ${{ matrix.GOARCH }}
        GOHOSTOS: linux
        GOHOSTARCH: amd64
      run: |
        go install -trimpath -ldflags "-s -w" "github.com/${GITHUB_REPOSITORY}/cmd/leveldb@${GITHUB_REF#refs/tags/}"

        ARTIFACT_DIR="leveldb-${GOOS}-${GOARCH}-${GITHUB_REF#refs/tags/v}"
        mkdir "${ARTIFACT_DIR}"
        cp LICENSE README.md "${ARTIFACT_DIR}"

        if [[ "${GOOS}/${GOARCH}" == "${GOHOSTOS}/${GOHOSTARCH}" ]]; then
          GOBIN="$(go env GOPATH)/bin"
        else
          GOBIN="$(go env GOPATH)/bin/${GOOS}_${GOARCH}"
        fi
        GOEXE="$(go env GOEXE)"
        cp "${GOBIN}/leveldb${GOEXE}" "${ARTIFACT_DIR}"
    - name: Upload release assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: ${{ matrix.GOOS }}
        GOARCH: ${{ matrix.GOARCH }}
      run: |
        ARTIFACT_DIR="leveldb-${GOOS}-${GOARCH}-${GITHUB_REF#refs/tags/v}"
        if [[ "${GOOS}" == "windows" ]]; then
          zip "${ARTIFACT_DIR}.zip" "${ARTIFACT_DIR}"/*
          gh release upload "${GITHUB_REF#refs/tags/}" "${ARTIFACT_DIR}.zip"
        else
          tar zcf "${ARTIFACT_DIR}.tar.gz" "${ARTIFACT_DIR}"
          gh release upload "${GITHUB_REF#refs/tags/}" "${ARTIFACT_DIR}.tar.gz"
        fi
